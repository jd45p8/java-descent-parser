package com.descentparser.gui;

import com.descentparser.tools.FileTools;
import com.descentparser.grammar.Grammar;
import com.descentparser.grammar.Head;
import java.util.ArrayList;
import java.io.File;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * Copyright 2019 José Polo <Github https://github.com/jd45p8>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 *
 * @author José Polo <Github https://github.com/jd45p8>
 */
public class GUI extends javax.swing.JFrame {

    ArrayList<String> productions = null;
    Grammar grammar = null;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        fileName = new javax.swing.JTextField();
        select = new javax.swing.JButton();
        analize = new javax.swing.JButton();
        noticeField = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grammarText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        freeGrammarText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        firstNextTable = new javax.swing.JTable();
        fileName1 = new javax.swing.JTextField();
        analize1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        mTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ackTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Descent Parser");

        fileName.setEditable(false);
        fileName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        select.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        select.setText("Seleccionar");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        analize.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        analize.setText("Anallizar");
        analize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizeActionPerformed(evt);
            }
        });

        noticeField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        grammarText.setEditable(false);
        grammarText.setColumns(20);
        grammarText.setRows(5);
        jScrollPane1.setViewportView(grammarText);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Sin analizar");

        freeGrammarText.setEditable(false);
        freeGrammarText.setColumns(20);
        freeGrammarText.setRows(5);
        jScrollPane2.setViewportView(freeGrammarText);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Sin vicios");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Primero y Siguiente");

        firstNextTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        firstNextTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Símbolo", "Primero", "Siguiente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        firstNextTable.setColumnSelectionAllowed(true);
        firstNextTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(firstNextTable);
        firstNextTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (firstNextTable.getColumnModel().getColumnCount() > 0) {
            firstNextTable.getColumnModel().getColumn(0).setResizable(false);
            firstNextTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            firstNextTable.getColumnModel().getColumn(1).setResizable(false);
            firstNextTable.getColumnModel().getColumn(2).setResizable(false);
        }

        fileName1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        analize1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        analize1.setText("Reconocer");
        analize1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analize1ActionPerformed(evt);
            }
        });

        mTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        mTable.setColumnSelectionAllowed(true);
        mTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(mTable);
        mTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Tabla M");

        ackTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pila", "Entrada", "Salida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ackTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(ackTable);
        if (ackTable.getColumnModel().getColumnCount() > 0) {
            ackTable.getColumnModel().getColumn(0).setResizable(false);
            ackTable.getColumnModel().getColumn(1).setResizable(false);
            ackTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Seguimiento de reconocimiento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(select)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analize, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(fileName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analize1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(noticeField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(258, 258, 258))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select)
                    .addComponent(fileName)
                    .addComponent(analize)
                    .addComponent(fileName1)
                    .addComponent(analize1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noticeField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizeActionPerformed
        if (productions != null) {
            grammar = new Grammar(productions);
            grammar.processGrammar();

            freeGrammarText.setText("");

            DefaultTableModel firstModel = (DefaultTableModel) firstNextTable.getModel();
            firstModel.setRowCount(0);

            DefaultTableModel mModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int x, int y) {
                    return false;
                }
            };
            mTable.setModel(mModel);

            String[] columns = new String[grammar.terminalSymbols.size() + 1];
            columns[0] = "Term\\no Term";            
            for (int i = 1; i < columns.length; i++) {
                columns[i] = grammar.terminalSymbols.get(i - 1);
            }

            mModel.setColumnIdentifiers(columns);
            mTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            mTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            for (int i = 1; i < columns.length; i++) {
                mTable.getColumnModel().getColumn(i).setPreferredWidth(70);
            }

            grammar.nonTerminals.forEach(A -> {
                Head head = grammar.heads.get(A);
                freeGrammarText.append(head.toString());
                firstModel.addRow(new Object[]{
                    head.getSymbol(),
                    head.getFirst(),
                    head.getNext()});
                String[] rowString = new String[columns.length];
                rowString[0] = A;
                for (int i = 1; i < columns.length; i++) {
                    rowString[i] = grammar.mTable.getProductionString(A, (String) columns[i]);
                }
                mModel.addRow(rowString);
            });

            noticeField.setText("¡Gramática analizada con éxito!");
        } else {
            noticeField.setText("¡Debe leer un archivo!");
        }
    }//GEN-LAST:event_analizeActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        File file = FileTools.requestFile();
        if (file != null) {
            fileName.setText(file.getName());
            grammarText.setText("");
            freeGrammarText.setText("");
            
            DefaultTableModel model = (DefaultTableModel) firstNextTable.getModel();
            model.setRowCount(0);
            
            model = (DefaultTableModel) mTable.getModel();
            model.setRowCount(0);
            model.setColumnCount(0);
            
            model = (DefaultTableModel) ackTable.getModel();
            model.setRowCount(0);
            
            try {
                productions = FileTools.readFile(file);
            } catch (IOException ex) {
                productions = null;
            }
            if (productions != null) {                
                productions.forEach(string -> {
                    grammarText.append(string + "\n");
                });
                noticeField.setText("¡Archivo leído con éxito!");
            } else {
                noticeField.setText("¡Problemas con el archivo!");
            }
        } else {
            noticeField.setText("¡Problemas con el archivo!");
        }
    }//GEN-LAST:event_selectActionPerformed

    private void analize1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analize1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_analize1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ackTable;
    private javax.swing.JButton analize;
    private javax.swing.JButton analize1;
    private javax.swing.JTextField fileName;
    private javax.swing.JTextField fileName1;
    private javax.swing.JTable firstNextTable;
    private javax.swing.JTextArea freeGrammarText;
    private javax.swing.JTextArea grammarText;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable mTable;
    private javax.swing.JLabel noticeField;
    private javax.swing.JButton select;
    // End of variables declaration//GEN-END:variables
}
